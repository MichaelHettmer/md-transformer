diff --git a/node_modules/@changesets/errors/CHANGELOG.md b/node_modules/@changesets/errors/CHANGELOG.md
index 14f9db5..3c150ca 100644
--- a/node_modules/@changesets/errors/CHANGELOG.md
+++ b/node_modules/@changesets/errors/CHANGELOG.md
@@ -4,31 +4,31 @@
 
 ### Patch Changes
 
-- [`1706fb7`](https://github.com/atlassian/changesets/commit/1706fb751ecc2f5a792c42f467b2063078d58716) [#321](https://github.com/atlassian/changesets/pull/321) Thanks [@mitchellhamilton](https://github.com/mitchellhamilton)! - Fix TypeScript declarations
+- [`1706fb7`](https://github.com/changesets/changesets/commit/1706fb751ecc2f5a792c42f467b2063078d58716) [#321](https://github.com/changesets/changesets/pull/321) Thanks [@mitchellhamilton](https://github.com/mitchellhamilton)! - Fix TypeScript declarations
 
 ## 0.1.3
 
 ### Patch Changes
 
-- [`04ddfd7`](https://github.com/atlassian/changesets/commit/04ddfd7c3acbfb84ef9c92873fe7f9dea1f5145c) [#305](https://github.com/atlassian/changesets/pull/305) Thanks [@Noviny](https://github.com/Noviny)! - Add link to changelog in readme
+- [`04ddfd7`](https://github.com/changesets/changesets/commit/04ddfd7c3acbfb84ef9c92873fe7f9dea1f5145c) [#305](https://github.com/changesets/changesets/pull/305) Thanks [@Noviny](https://github.com/Noviny)! - Add link to changelog in readme
 
 ## 0.1.2
 
 ### Patch Changes
 
-- [`8f0a1ef`](https://github.com/atlassian/changesets/commit/8f0a1ef327563512f471677ef0ca99d30da009c0) [#183](https://github.com/atlassian/changesets/pull/183) Thanks [@mitchellhamilton](https://github.com/mitchellhamilton)! - Add `InternalError` for errors which are unexpected and if they occur, an issue should be opened. The CLI catches the error and logs a link for users to open an issue with the error and versions of Node and Changesets filled in
+- [`8f0a1ef`](https://github.com/changesets/changesets/commit/8f0a1ef327563512f471677ef0ca99d30da009c0) [#183](https://github.com/changesets/changesets/pull/183) Thanks [@mitchellhamilton](https://github.com/mitchellhamilton)! - Add `InternalError` for errors which are unexpected and if they occur, an issue should be opened. The CLI catches the error and logs a link for users to open an issue with the error and versions of Node and Changesets filled in
 
-* [`8f0a1ef`](https://github.com/atlassian/changesets/commit/8f0a1ef327563512f471677ef0ca99d30da009c0) [#183](https://github.com/atlassian/changesets/pull/183) Thanks [@mitchellhamilton](https://github.com/mitchellhamilton)! - Add `PreExitButNotInPreModeError` and `PreEnterButInPreModeError`
+* [`8f0a1ef`](https://github.com/changesets/changesets/commit/8f0a1ef327563512f471677ef0ca99d30da009c0) [#183](https://github.com/changesets/changesets/pull/183) Thanks [@mitchellhamilton](https://github.com/mitchellhamilton)! - Add `PreExitButNotInPreModeError` and `PreEnterButInPreModeError`
 
 ## 0.1.1
 
 ### Patch Changes
 
-- [`5ababa0`](https://github.com/atlassian/changesets/commit/5ababa08c8ea5ee3b4ff92253e2e752a5976cd27) [#201](https://github.com/atlassian/changesets/pull/201) Thanks [@ajaymathur](https://github.com/ajaymathur)! - - Added ExitError class and ValidationError class
+- [`5ababa0`](https://github.com/changesets/changesets/commit/5ababa08c8ea5ee3b4ff92253e2e752a5976cd27) [#201](https://github.com/changesets/changesets/pull/201) Thanks [@ajaymathur](https://github.com/ajaymathur)! - - Added ExitError class and ValidationError class
   - Extend extendable-error in our error classes instead of JS Error class due to better Error messages thrown
 
 ## 0.1.0
 
 ### Minor Changes
 
-- [`94de7c1`](https://github.com/atlassian/changesets/commit/94de7c1df278d63f98b599c08271ba4ef26bc3f8) [#173](https://github.com/atlassian/changesets/pull/173) Thanks [@ajaymathur](https://github.com/ajaymathur)! - Create package with `GitError`
+- [`94de7c1`](https://github.com/changesets/changesets/commit/94de7c1df278d63f98b599c08271ba4ef26bc3f8) [#173](https://github.com/changesets/changesets/pull/173) Thanks [@ajaymathur](https://github.com/ajaymathur)! - Create package with `GitError`
diff --git a/node_modules/@changesets/errors/dist/errors.cjs.dev.js b/node_modules/@changesets/errors/dist/errors.cjs.dev.js
index b1b6360..830dea4 100644
--- a/node_modules/@changesets/errors/dist/errors.cjs.dev.js
+++ b/node_modules/@changesets/errors/dist/errors.cjs.dev.js
@@ -2,38 +2,40 @@
 
 Object.defineProperty(exports, '__esModule', { value: true });
 
-function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
+var ExtendableError = require('extendable-error');
 
-var ExtendableError = _interopDefault(require('extendable-error'));
+function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }
 
-class GitError extends ExtendableError {
+var ExtendableError__default = /*#__PURE__*/_interopDefault(ExtendableError);
+
+class GitError extends ExtendableError__default["default"] {
   constructor(code, message) {
     super(`${message}, exit code: ${code}`);
     this.code = code;
   }
 
 }
-class ValidationError extends ExtendableError {}
-class ExitError extends ExtendableError {
+class ValidationError extends ExtendableError__default["default"] {}
+class ExitError extends ExtendableError__default["default"] {
   constructor(code) {
     super(`The process exited with code: ${code}`);
     this.code = code;
   }
 
 }
-class PreExitButNotInPreModeError extends ExtendableError {
+class PreExitButNotInPreModeError extends ExtendableError__default["default"] {
   constructor() {
     super("pre mode cannot be exited when not in pre mode");
   }
 
 }
-class PreEnterButInPreModeError extends ExtendableError {
+class PreEnterButInPreModeError extends ExtendableError__default["default"] {
   constructor() {
     super("pre mode cannot be entered when in pre mode");
   }
 
 }
-class InternalError extends ExtendableError {
+class InternalError extends ExtendableError__default["default"] {
   constructor(message) {
     super(message);
   }
diff --git a/node_modules/@changesets/errors/dist/errors.cjs.prod.js b/node_modules/@changesets/errors/dist/errors.cjs.prod.js
index 72e57bb..4f5f73f 100644
--- a/node_modules/@changesets/errors/dist/errors.cjs.prod.js
+++ b/node_modules/@changesets/errors/dist/errors.cjs.prod.js
@@ -1,42 +1,46 @@
 "use strict";
 
-function _interopDefault(ex) {
-  return ex && "object" == typeof ex && "default" in ex ? ex.default : ex;
-}
-
 Object.defineProperty(exports, "__esModule", {
   value: !0
 });
 
-var ExtendableError = _interopDefault(require("extendable-error"));
+var ExtendableError = require("extendable-error");
+
+function _interopDefault(e) {
+  return e && e.__esModule ? e : {
+    default: e
+  };
+}
+
+var ExtendableError__default = _interopDefault(ExtendableError);
 
-class GitError extends ExtendableError {
+class GitError extends ExtendableError__default.default {
   constructor(code, message) {
     super(`${message}, exit code: ${code}`), this.code = code;
   }
 }
 
-class ValidationError extends ExtendableError {}
+class ValidationError extends ExtendableError__default.default {}
 
-class ExitError extends ExtendableError {
+class ExitError extends ExtendableError__default.default {
   constructor(code) {
     super(`The process exited with code: ${code}`), this.code = code;
   }
 }
 
-class PreExitButNotInPreModeError extends ExtendableError {
+class PreExitButNotInPreModeError extends ExtendableError__default.default {
   constructor() {
     super("pre mode cannot be exited when not in pre mode");
   }
 }
 
-class PreEnterButInPreModeError extends ExtendableError {
+class PreEnterButInPreModeError extends ExtendableError__default.default {
   constructor() {
     super("pre mode cannot be entered when in pre mode");
   }
 }
 
-class InternalError extends ExtendableError {
+class InternalError extends ExtendableError__default.default {
   constructor(message) {
     super(message);
   }
