diff --git a/node_modules/@changesets/types/dist/declarations/src/index.d.ts b/node_modules/@changesets/types/dist/declarations/src/index.d.ts
index cd3996d..4de8ce5 100644
--- a/node_modules/@changesets/types/dist/declarations/src/index.d.ts
+++ b/node_modules/@changesets/types/dist/declarations/src/index.d.ts
@@ -53,6 +53,16 @@ export declare type PackageJSON = {
 export declare type PackageGroup = ReadonlyArray<string>;
 export declare type Fixed = ReadonlyArray<PackageGroup>;
 export declare type Linked = ReadonlyArray<PackageGroup>;
+/**
+ * bitwise flag for private packages
+ * Check if the flag is enabled with `(flags & PrivatePackages.Version) === PrivatePackages.Version`
+ */
+export declare const PrivatePackages: {
+    readonly Ignore: 0;
+    readonly Version: 1;
+    readonly Tag: 2;
+    readonly VersionAndTag: 3;
+};
 export declare type Config = {
     changelog: false | readonly [string, any];
     commit: false | readonly [string, any];
@@ -60,6 +70,8 @@ export declare type Config = {
     linked: Linked;
     access: AccessType;
     baseBranch: string;
+    /** Features enabled for Private packages */
+    privatePackages: typeof PrivatePackages[keyof typeof PrivatePackages];
     /** The minimum bump type to trigger automatic update of internal dependencies that are part of the same release */
     updateInternalDependencies: "patch" | "minor";
     ignore: ReadonlyArray<string>;
@@ -74,6 +86,8 @@ export declare type WrittenConfig = {
     linked?: Linked;
     access?: AccessType;
     baseBranch?: string;
+    /** Opt in to tracking non-npm / private packages */
+    privatePackages?: "ignore" | "version-without-tag" | "version-and-tag";
     /** The minimum bump type to trigger automatic update of internal dependencies that are part of the same release */
     updateInternalDependencies?: "patch" | "minor";
     ignore?: ReadonlyArray<string>;
diff --git a/node_modules/@changesets/types/dist/types.cjs.dev.js b/node_modules/@changesets/types/dist/types.cjs.dev.js
index eb109ab..8e1e45d 100644
--- a/node_modules/@changesets/types/dist/types.cjs.dev.js
+++ b/node_modules/@changesets/types/dist/types.cjs.dev.js
@@ -1,2 +1,18 @@
 'use strict';
 
+Object.defineProperty(exports, '__esModule', { value: true });
+
+// NB: Bolt check uses a different dependnecy set to every other package.
+
+/**
+ * bitwise flag for private packages
+ * Check if the flag is enabled with `(flags & PrivatePackages.Version) === PrivatePackages.Version`
+ */
+const PrivatePackages = {
+  Ignore: 0,
+  Version: 1,
+  Tag: 2,
+  VersionAndTag: 3
+};
+
+exports.PrivatePackages = PrivatePackages;
diff --git a/node_modules/@changesets/types/dist/types.cjs.prod.js b/node_modules/@changesets/types/dist/types.cjs.prod.js
index 3918c74..1ece990 100644
--- a/node_modules/@changesets/types/dist/types.cjs.prod.js
+++ b/node_modules/@changesets/types/dist/types.cjs.prod.js
@@ -1 +1,14 @@
 "use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: !0
+});
+
+const PrivatePackages = {
+  Ignore: 0,
+  Version: 1,
+  Tag: 2,
+  VersionAndTag: 3
+};
+
+exports.PrivatePackages = PrivatePackages;
diff --git a/node_modules/@changesets/types/dist/types.esm.js b/node_modules/@changesets/types/dist/types.esm.js
index 8b13789..20f3d78 100644
--- a/node_modules/@changesets/types/dist/types.esm.js
+++ b/node_modules/@changesets/types/dist/types.esm.js
@@ -1 +1,14 @@
+// NB: Bolt check uses a different dependnecy set to every other package.
 
+/**
+ * bitwise flag for private packages
+ * Check if the flag is enabled with `(flags & PrivatePackages.Version) === PrivatePackages.Version`
+ */
+const PrivatePackages = {
+  Ignore: 0,
+  Version: 1,
+  Tag: 2,
+  VersionAndTag: 3
+};
+
+export { PrivatePackages };
diff --git a/node_modules/@changesets/types/src/index.ts b/node_modules/@changesets/types/src/index.ts
index 9492550..b586a48 100644
--- a/node_modules/@changesets/types/src/index.ts
+++ b/node_modules/@changesets/types/src/index.ts
@@ -61,6 +61,17 @@ export type PackageGroup = ReadonlyArray<string>;
 export type Fixed = ReadonlyArray<PackageGroup>;
 export type Linked = ReadonlyArray<PackageGroup>;
 
+/**
+ * bitwise flag for private packages
+ * Check if the flag is enabled with `(flags & PrivatePackages.Version) === PrivatePackages.Version`
+ */
+export const PrivatePackages = {
+  Ignore: 0,
+  Version: 1,
+  Tag: 2,
+  VersionAndTag: 3
+} as const;
+
 export type Config = {
   changelog: false | readonly [string, any];
   commit: false | readonly [string, any];
@@ -68,6 +79,8 @@ export type Config = {
   linked: Linked;
   access: AccessType;
   baseBranch: string;
+  /** Features enabled for Private packages */
+  privatePackages: typeof PrivatePackages[keyof typeof PrivatePackages];
   /** The minimum bump type to trigger automatic update of internal dependencies that are part of the same release */
   updateInternalDependencies: "patch" | "minor";
   ignore: ReadonlyArray<string>;
@@ -85,6 +98,8 @@ export type WrittenConfig = {
   linked?: Linked;
   access?: AccessType;
   baseBranch?: string;
+  /** Opt in to tracking non-npm / private packages */
+  privatePackages?: "ignore" | "version-without-tag" | "version-and-tag";
   /** The minimum bump type to trigger automatic update of internal dependencies that are part of the same release */
   updateInternalDependencies?: "patch" | "minor";
   ignore?: ReadonlyArray<string>;
